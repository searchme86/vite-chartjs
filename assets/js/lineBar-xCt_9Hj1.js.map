{"version":3,"file":"lineBar-xCt_9Hj1.js","sources":["../../../src/components/statistic/statistic__sales/statistic__count/count__data.js","../../../src/components/statistic/statistic__sales/statistic__count/count.js","../../../src/plugins/tooltip__lineBar.js","../../../src/views/lineWithBar.js"],"sourcesContent":["import {chartType, chartColor} from \"../../../../config/chartConfig.js\";\nimport {\n  createXYCoordinateSets,\n  createDiffArray,\n} from \"../../../../util/util.js\";\n\nconst countDataSets = {\n  standardsData: [\n    \"2022-10-20\",\n    \"2022-10-21\",\n    \"2022-10-22\",\n    \"2022-10-23\",\n    \"2022-10-24\",\n    \"2022-10-25\",\n    \"2022-10-26\",\n  ],\n  blueData: [2, 4, 10, 4, 12, 20, 10],\n  grayData: [10, 20, 2, 30, 25, 4, 2],\n};\n\nconst {standardsData, blueData, grayData, linearData} = countDataSets;\n\nconst {chartTypeLine, chartTypeBar} = chartType;\n\nlet barBlueCoordinate = createXYCoordinateSets(standardsData, blueData);\nlet barGrayCoordinate = createXYCoordinateSets(standardsData, grayData);\n\nconst linearDiffDataSets = createDiffArray(grayData, blueData);\nlet linearDataCoordinate = createXYCoordinateSets(\n  standardsData,\n  linearDiffDataSets,\n);\n\nexport const count__data = {\n  labels: standardsData,\n  datasets: [\n    {\n      order: 1,\n      label: \"판매금액\",\n      ...chartTypeBar,\n      data: barBlueCoordinate,\n      backgroundColor: [\"rgba(255, 26, 104, 0.2)\"],\n      borderColor: [\"rgba(255, 26, 104, 1)\"],\n      borderWidth: 1,\n    },\n    {\n      order: 1,\n      label: \"취소금액\",\n      ...chartTypeBar,\n      data: barGrayCoordinate,\n      backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\n      borderColor: [\"rgba(54, 162, 235, 1)\"],\n      borderWidth: 1,\n    },\n    {\n      order: 0,\n      label: \"취소율\",\n      ...chartTypeLine,\n      data: linearDataCoordinate,\n      backgroundColor: [\"rgba(0, 0, 0, 0.2)\"],\n      borderColor: [\"rgba(0, 0, 0, 1)\"],\n      borderWidth: 1,\n      borderDash: [5, 5],\n      borderWidth: 1,\n    },\n  ],\n};\n","import {count__data} from \"./count__data.js\";\nimport {tooltipWithLinearGraph} from \"../../../../plugins/tooltip__lineBar.js\";\n\nexport const statistic__count = {\n  type: \"bar\",\n  data: count__data,\n  options: {\n    barPercentage: 1.0,\n    scales: {\n      x: {},\n      y: {\n        beginAtZero: true,\n      },\n    },\n    plugins: {\n      tooltip: {\n        enabled: false,\n        position: \"nearest\",\n        external: tooltipWithLinearGraph,\n      },\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n    },\n  },\n};\n","import {\n  deleteElementsByClass,\n  deleteAllChildElements,\n  generateNewObj,\n  mixObj,\n  calculateDiffInfo,\n  checkifExistedOrCreateTooltip,\n} from \"../util/util.js\";\n\n/**\n * chart.js의 plugin으로 사용되는 함수는, 일반함수의 콜백함수와 같다고 생각합니다.\n * chart.js의 plugin으로 바인딩 되는 함수는 chart.js에 제공하는 chart 컨텍스트 정보를 받아서 각 차트의 데이터를 접근할 수 있습니다.\n * tooltipWithLinearGraph 함수는 chartjs에서 제공하는 정보를 바탕으로 차트 정보를 가지고 툴팁을 생성하는 커스텀 함수입니다.\n * * */\nexport const tooltipWithLinearGraph = (context) => {\n  const {chart, tooltip} = context;\n  const tooltipContainer = checkifExistedOrCreateTooltip(chart);\n  const {\n    opacity: tooltipOpacity,\n    body: tooltipBody,\n    title: titleXaxisArray,\n  } = tooltip;\n\n  /**\n   * 툴팁은 초기에 보이지 않기 위해, opacity를 0으로 초기화 시킵니다.\n   * 매번 함수가 초기화되고 실행될때, 툴팁의 opacity가 0으로 만들도록 합니다.\n   * * */\n\n  if (tooltipOpacity === 0) {\n    tooltipContainer.style.opacity = 0;\n    return;\n  }\n\n  /**\n   * 오직 차트의 갯수가 2개일 경우에만 실행되도록 분기처리 하였습니다.\n   * 툴팁과 차트 사이의 vertical line은 오직 두 개의 차트로만 보여져야 하기 때문에, data의 length를 2개로 한정해야 하기 때문입니다.\n   * * */\n  if (chart.data.datasets?.length >= 2 && tooltip._active?.length >= 2) {\n    const {\n      ctx,\n      data: {datasets: graphData, labels: titleXAxisOfGrapthArray},\n    } = chart;\n\n    const tooltipList =\n      tooltipContainer.getElementsByClassName(\"tooltip__list\")[0];\n    const titleXAxisArray = titleXAxisOfGrapthArray || [];\n\n    /**\n     * tooltip._active[0]이든 tooltip._active[1]이든, tooltip._active[i]의 값의 index는 모두 동일합니다.\n     * * */\n    let currentIndexHovered = tooltip._active[0].index;\n\n    /**\n     * 차트1에 해당하는 라벨과, 데이터, 그리고, 그 데이터를 보여주는 단위를 하나의 객체로 만듭니다.\n     * * */\n    let result = generateNewObj(\n      chart.data.datasets[0].data,\n      chart.data.datasets[0].label,\n      {unit: \"원\"},\n    );\n\n    /**\n     * 차트2에 해당하는 라벨과, 데이터, 그리고, 그 데이터를 보여주는 단위를 하나의 객체로 만듭니다.\n     * * */\n    let resulta = generateNewObj(\n      chart.data.datasets[1].data,\n      chart.data.datasets[1].label,\n      {unit: \"원\"},\n    );\n\n    /**\n     * 위에서 만든 차트1과 차트2의 데이터를 하나의 객체로 만듭니다.\n     * 이유는, forEach와 같이 데이터를 순환해 돔에 렌더링 하기 위해서 입니다.\n     * * */\n    let www = mixObj(result, resulta);\n\n    /**\n     * chartjs에 마우스를 호버할 경우, 호버한 인덱스(index)정보를 chartjs에서 구할 수 있습니다.\n     * 현재 호버한 인덱스에 해당하는 차트의 정보를 얻기 위해, 객체에 해당 인덱스에 맞는 값을 구합니다.\n     * * */\n    let yAxisDataArrayHovered = www[currentIndexHovered];\n\n    /**\n     * 차트1과 차트2의 차이(diff)에 해당하는 데이터셋을 만들기 위해 새로운 객체를 만듭니다.\n     * diff객체를 만들기 위해, 기존 객체의 데이터를 활용합니다.\n     * * */\n    let {diff, unit} = calculateDiffInfo(result, resulta, currentIndexHovered);\n\n    /**\n     * 새로 렌더링되는 돔을 보여주기 위해서는, 기존 돔을 삭제하기 위해,\n     * 이전의 돔을 모두 제거합니다.\n     * \"delete-me\" 클래스를 가진 모든 요소들을 삭제합니다.\n     *\n     * deleteAllChildElements : 모든 자식요소들을 삭제하는 함수를 import해서 tooltipList를 삭제합니다.\n     * * */\n\n    deleteElementsByClass(\"toolTip__title\");\n    deleteElementsByClass(\"offscreen\");\n    deleteAllChildElements(tooltipList);\n\n    /**\n     * *add new children\n     * 현재 마우스 호버한 데이터를 보여주기 위해서는, 이전에 생성된 아이템을 삭제하기 위해, 이전에 돔을 삭제했습니다.\n     * 이제는 마우스 호버한 그 데이터를 보여주기 위해, 마우스 호버한 인덱스에 해당 아이템을 추가(add)합니다.\n     * 리스트 부분을 추가하는 것으로, 마우스 호버한 특정 그래프에 해당하는 y축 데이터를 추가합니다.\n     */\n\n    yAxisDataArrayHovered.forEach((eachYaxisData, i) => {\n      const {label, y: yAxisValue, unit} = eachYaxisData;\n\n      const tooltipLi = document.createElement(\"li\");\n      tooltipLi.classList.add(\"tooltip__Item\");\n\n      /**\n       *\n       * 차트1과 차트2에 해당하는 데이터를 돔에 add 합니다.\n       */\n      const tooltipGraphTitle = document.createElement(\"strong\");\n      tooltipGraphTitle.classList.add(\"tooltip__graphTitle\");\n      const tooltipGraphTitleText = document.createTextNode(label);\n      tooltipGraphTitle.appendChild(tooltipGraphTitleText);\n\n      //숫자\n      const tooltipContent = document.createElement(\"span\");\n      tooltipContent.classList.add(\"tooltip__graphValue\");\n      const tooltipItemValue = document.createTextNode(`${yAxisValue}${unit}`);\n      tooltipContent.appendChild(tooltipItemValue);\n\n      tooltipLi.appendChild(tooltipGraphTitle);\n      tooltipLi.appendChild(tooltipContent);\n\n      tooltipList.appendChild(tooltipLi);\n    });\n\n    // 돔 추가\n    const moreLi = document.createElement(\"li\");\n    moreLi.classList.add(\"tooltip__Item\");\n\n    const tooltipGraphTitle = document.createElement(\"strong\");\n    tooltipGraphTitle.classList.add(\"tooltip__graphTitle\");\n    const tooltipGraphTitleText = document.createTextNode(\"취소율\");\n    tooltipGraphTitle.appendChild(tooltipGraphTitleText);\n\n    const tooltipContent = document.createElement(\"span\");\n    tooltipContent.classList.add(\n      \"tooltip__graphValue\",\n      \"tooltip__graphValue--blue\",\n    );\n\n    const tooltipItemValue = document.createTextNode(`+${diff}${unit}`);\n    tooltipContent.appendChild(tooltipItemValue);\n\n    moreLi.appendChild(tooltipGraphTitle);\n    moreLi.appendChild(tooltipContent);\n    tooltipList.appendChild(moreLi);\n\n    //새롭게 내용을 추가함\n    //타이틀 부분 추가\n    const tooltipStrong = document.createElement(\"strong\");\n    tooltipStrong.classList.add(\"offscreen\");\n    const tooltipTitle = document.createTextNode(\n      `x축, ${titleXAxisArray[currentIndexHovered]}의 툴팁내용.`,\n    );\n    tooltipStrong.appendChild(tooltipTitle);\n    tooltipContainer.insertAdjacentElement(\"afterbegin\", tooltipStrong);\n\n    /**\n     * 툴팁이 보이도록 opacity에 1을 줍니다.\n     */\n\n    tooltipContainer.style.opacity = 1;\n\n    /**\n     * *positioning of the tooltip(caret)\n     * 생성한 툴팁의 위치를 지정합니다.\n     * 차트의 특정 데이터 포인트를 마우스 호버 할 경우, 생성한 툴팁이 어디에 위치 할 것인지 value를 계산합니다.\n     */\n    tooltipContainer.style.left = tooltip.caretX + \"px\";\n    tooltipContainer.style.top = `${\n      tooltip.dataPoints[0].element.y -\n      tooltipContainer.getBoundingClientRect().height -\n      16\n    }px`;\n  } else {\n    console.log(\"그래프가 1개만 존재합니다.\");\n  }\n};\n","import \"../assets/style/common.css\";\nimport \"../assets/style/layout.css\";\nimport \"../assets/style/tooltip.css\";\n\nimport \"../lib/chart.min\";\nimport {statistic__count} from \"../components/statistic/statistic__sales/statistic__count/count\";\n\nif (document.getElementById(\"count\")) {\n  const count = (() => {\n    const count = new Chart(document.getElementById(\"count\"), statistic__count);\n  })();\n}\n"],"names":["standardsData","blueData","grayData","linearData","chartTypeLine","chartTypeBar","chartType","barBlueCoordinate","createXYCoordinateSets","barGrayCoordinate","linearDataCoordinate","createDiffArray","statistic__count","type","data","labels","datasets","order","label","backgroundColor","borderColor","borderWidth","borderDash","options","barPercentage","scales","x","y","beginAtZero","plugins","tooltip","enabled","position","external","context","chart","tooltipContainer","checkifExistedOrCreateTooltip","opacity","tooltipOpacity","body","tooltipBody","title","titleXaxisArray","length","_active","ctx","graphData","titleXAxisOfGrapthArray","tooltipList","getElementsByClassName","titleXAxisArray","currentIndexHovered","index","result","generateNewObj","unit","resulta","yAxisDataArrayHovered","mixObj","diff","calculateDiffInfo","deleteElementsByClass","deleteAllChildElements","forEach","eachYaxisData","i","yAxisValue","tooltipLi","document","createElement","classList","add","tooltipGraphTitle","tooltipGraphTitleText","createTextNode","appendChild","tooltipContent","tooltipItemValue","moreLi","tooltipStrong","tooltipTitle","insertAdjacentElement","style","left","caretX","top","dataPoints","element","getBoundingClientRect","height","legend","display","getElementById","Chart"],"mappings":"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"}